version: '3.8'

services:
  event-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile.server
    container_name: event_manager_server
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - DB_PATH=/app/data/events.db
      - SERVER_PORT=8080
      - LOG_LEVEL=info
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - event_manager_network

  nginx:
    image: nginx:alpine
    container_name: event_manager_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - event-server
    restart: unless-stopped
    networks:
      - event_manager_network

  # Optional: Add a database backup service
  backup:
    image: alpine:latest
    container_name: event_manager_backup
    volumes:
      - ./data:/data:ro
      - ./backups:/backups
    command: |
      sh -c "
        while true; do
          echo 'Creating backup...'
          cp /data/events.db /backups/events_backup_$$(date +%Y%m%d_%H%M%S).db
          echo 'Backup created'
          # Keep only last 7 days of backups
          find /backups -name 'events_backup_*.db' -mtime +7 -delete
          sleep 86400  # Run daily
        done
      "
    restart: unless-stopped
    depends_on:
      - event-server

networks:
  event_manager_network:
    driver: bridge

volumes:
  event_data:
    driver: local
  event_logs:
    driver: local
  event_backups:
    driver: local